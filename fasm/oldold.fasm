format ELF64


SYS_read equ 0
SYS_write equ 1
SYS_open equ 2
SYS_close equ 3
SYS_stat equ 4
SYS_fstat equ 5
SYS_lstat equ 6
SYS_poll equ 7
SYS_lseek equ 8
SYS_mmap equ 9

SYS_exit equ 60
STDOUT equ 1

macro exit exit_code
{
	mov rax, SYS_exit
	mov rdi, exit_code
	syscall
}

macro write fd, buf, count
{
	mov rax, SYS_write
	mov rdi, fd
	mov rsi, buf
	mov rdx, count
	syscall
}

macro stringset string_lbl, string
{
	string_lbl db string,0xA
	string_lbl#.size = $-string_lbl
}


macro print msg
{
	local msg_label, msg_length
section '.data'
	msg_label db msg,0xA
	msg_length = $ - msg_label
section '.text'
	write STDOUT, msg_label, msg_length
}

macro read fd, buf, count
{
	mov rax, SYS_read
	mov rdi, fd
	mov rsi, buf
	mov rdx, count
	syscall
}

section '.text' executable
start:
	print "Fuck all of you fr"
	print "EVERY SINGLE ONE OF YALL!!! FR!!!!"
	exit 0

section '.data' writeable

;; NICE MEMORIES:
;
;	mov rax, SYS_write
;	mov rdi, STDOUT
;	mov rsi, @b
;	X = @b
;	;X = 1
;	Y = $
;	;Y = 2
;	X = Y - X
;	mov rdx, Y - X
;	syscall
;
;	;X = X + 1
;}
